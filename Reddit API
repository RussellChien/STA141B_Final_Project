Using the reddit API try to find the correlation between two subreddits, like is a user from r/depression also going to be a user from r/anime.

Problems: I am not sure but I think we can not make a pivot column between subreddit to subreddit, so my plan B is below




import praw
import pandas as pd
from scipy.stats import pearsonr

# Create a Reddit instance
reddit = praw.Reddit(client_id='BXdMZ7nRNEr0kahVVNH_DQ',
                     client_secret='efsc1ZRlVrmez8JHbQ5h9dN8UcJ68Q',
                     user_agent='Zain Khalid')

# Define subreddits to analyze
subreddits = ['anime', 'depression']

# Get top 1000 posts from each subreddit
posts = []
for subreddit in subreddits:
    subreddit_posts = reddit.subreddit(subreddit).top(limit=10)
    for post in subreddit_posts:
        posts.append([post.id, post.title, post.score, post.subreddit, post.url, post.num_comments, post.created_utc])

# Convert posts into a pandas DataFrame
df = pd.DataFrame(posts, columns=['id', 'title', 'score', 'subreddit', 'url', 'num_comments', 'created_utc'])

# Pivot table to get number of posts per day for each subreddit
pivot_table = pd.pivot_table(df, values='id', index='created_utc', columns='subreddit', aggfunc='count')

# Calculate correlation between subreddits
corr, _ = pearsonr(pivot_table['anime'], pivot_table['depression'])
print(f'Correlation between r/anime and r/depression: {corr:.2f}')

#some politics communities too




Just in case the code above doesnt work the next thing we can do, is to do this manually using contirbuttor limit we can count the amount of users who contributed to both r/anime and r/depression. We can expand this by just changing r/anime to another community i was thinking of doing this 10 times with 10 different communtiies to see what community has the most overlap
Problems: Long ass run time



import praw

reddit = praw.Reddit(client_id='BXdMZ7nRNEr0kahVVNH_DQ',
                     client_secret='efsc1ZRlVrmez8JHbQ5h9dN8UcJ68Q',
                     user_agent='Zain Khalid')

# Define subreddits to analyze
subreddit1 = reddit.subreddit('anime')
subreddit2 = reddit.subreddit('depression')

# Get recent contributors for each subreddit
contributors1 = set()
for submission in subreddit1.new(limit=100):
    contributors1.add(submission.author)
    submission.comments.replace_more(limit=None)
    for comment in submission.comments.list():
        contributors1.add(comment.author)

contributors2 = set()
for submission in subreddit2.new(limit=100):
    contributors2.add(submission.author)
    submission.comments.replace_more(limit=None)
    for comment in submission.comments.list():
        contributors2.add(comment.author)

# Get the number of users who have contributed to both subreddits
common_contributors = len(contributors1 & contributors2)

print(f"{common_contributors} users have contributed to both r/anime and r/depression.")


Create a dataframe of the karma of each users post in r/depression, we will add other communities to the pivot table.
The question we want to answer is does the higher karma a user have is that a good indicator of the likelihood of them being subscribed 
to r/depression. Basically since there is no way to track screentime of the user the next best thing is to see if karma which is just a something 
that tracks how much a person comments on each post i blah blah

import praw
import pandas as pd

reddit = praw.Reddit(client_id='BXdMZ7nRNEr0kahVVNH_DQ',
                     client_secret='efsc1ZRlVrmez8JHbQ5h9dN8UcJ68Q',
                     user_agent='Zain Khalid')

# specify the subreddit we want to analyze
subreddit = reddit.subreddit("depression")

# fetch the top 100 posts from the past week
posts = subreddit.top("week", limit=100)

# create an empty list to store post information
post_info = []

# loop through each post and extract relevant information
for post in posts:
    if post.author is not None:
        post_info.append({
            "User": post.author.name,
            "Score": post.score,
            "Title": post.title,
            "Created": post.created_utc,
        })

# create a pandas dataframe from the list of post information
df = pd.DataFrame(post_info)

# print the dataframe
print(df)


I found the average in the code lol 


import praw

reddit = praw.Reddit(client_id='BXdMZ7nRNEr0kahVVNH_DQ',
                     client_secret='efsc1ZRlVrmez8JHbQ5h9dN8UcJ68Q',
                     user_agent='Zain Khalid')

# specify the subreddit we want to analyze
subreddit = reddit.subreddit("depression")

# fetch the top 100 posts from the past week
posts = subreddit.top("week", limit=100)

# calculate the total karma and number of posts
total_karma = 0
num_posts = 0

for post in posts:
    total_karma += post.score
    num_posts += 1

# calculate the average karma per post
if num_posts > 0:
    avg_karma = total_karma / num_posts
    print(f"The average karma per post on r/depression is {avg_karma:.2f}.")
else:
    print("No posts found.")




